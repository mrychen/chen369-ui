(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["umi"] = factory();
	else
		root["umi"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./components/lib/ChenKeybord/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/lib/ChenKeybord/index.js":
/*!*********************************************!*\
  !*** ./components/lib/ChenKeybord/index.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue */ \"./components/lib/ChenKeybord/index.vue\");\n\r\n\r\n// // eslint-disable-next-line func-names\r\n_index_vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].install = function (Vue) {\r\n    // console.log(ChenKeybord.name);\r\n    Vue.component(_index_vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name, _index_vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n};\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_index_vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n// lib整个项目的入口文件；实现全部导入；\r\n\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.js?");

/***/ }),

/***/ "./components/lib/ChenKeybord/index.vue":
/*!**********************************************!*\
  !*** ./components/lib/ChenKeybord/index.vue ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=8589fec4&scoped=true */ \"./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true\");\n/* harmony import */ var _index_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js */ \"./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true */ \"./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _index_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"8589fec4\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"components/lib/ChenKeybord/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?");

/***/ }),

/***/ "./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js":
/*!**********************************************************************!*\
  !*** ./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js */ \"./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?");

/***/ }),

/***/ "./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true":
/*!******************************************************************************************************!*\
  !*** ./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true */ \"./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true\");\n/* harmony import */ var _node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_8589fec4_lang_css_scoped_true__WEBPACK_IMPORTED_MODULE_0___default.a); \n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?");

/***/ }),

/***/ "./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true":
/*!****************************************************************************************!*\
  !*** ./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_ref_5_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=8589fec4&scoped=true */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_ref_5_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_ref_5_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_8589fec4_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?");

/***/ }),

/***/ "./components/lib/ChenKeybord/keys.js":
/*!********************************************!*\
  !*** ./components/lib/ChenKeybord/keys.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// 键盘上的：键盘名-键盘值-keyCode的值\r\n//keyCode的值，只针对于设备键盘的输入\r\n\r\n// 键盘默认的值以及对饮的keycode的值：是大写的；\r\n// 字符也是默认的\r\n// keys =\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\r\n    {\r\n        key: \"`\",\r\n        value: \"`\",\r\n        keyCode: 192\r\n    },\r\n    {\r\n        key: \"1\",\r\n        value: \"1\",\r\n        keyCode: 49,\r\n\r\n    },\r\n    {\r\n        key: \"2\",\r\n        value: \"2\",\r\n        keyCode: 50\r\n    },\r\n    {\r\n        key: \"3\",\r\n        value: \"3\",\r\n        keyCode: 51\r\n    },\r\n    {\r\n        key: \"4\",\r\n        value: \"4\",\r\n        keyCode: 52\r\n    },\r\n    {\r\n        key: \"5\",\r\n        value: \"5\",\r\n        keyCode: 53\r\n    },\r\n    {\r\n        key: \"6\",\r\n        value: \"6\",\r\n        keyCode: 54\r\n    },\r\n    {\r\n        key: \"7\",\r\n        value: \"7\",\r\n        keyCode: 55\r\n    },\r\n    {\r\n        key: \"8\",\r\n        value: \"8\",\r\n        keyCode: 56\r\n    },\r\n    {\r\n        key: \"9\",\r\n        value: \"9\",\r\n        keyCode: 57\r\n    },\r\n    {\r\n        key: \"0\",\r\n        value: \"0\",\r\n        keyCode: 48\r\n    },\r\n    {\r\n        key: \"-\",\r\n        value: \"-\",\r\n        keyCode: 189\r\n    },\r\n    {\r\n        key: \"=\",\r\n        value: \"=\",\r\n        keyCode: 187\r\n    },\r\n    {\r\n        key: \"Backspace\",\r\n        value: \"删除\",\r\n        class: 'del',\r\n        // 元素遍历布局的时候;是否需要添加'\\n';html会识别换行；实现布局的换行\r\n        br: true,\r\n        keyCode: 8,\r\n        code: \"Backspace\"\r\n    },\r\n    // tab键的处理-chenh修改\r\n    {\r\n        key: \"tab\",\r\n        value: \"tab\",\r\n        class: 'tab',\r\n        keyCode: 9\r\n    },\r\n    {\r\n        key: \"Q\",\r\n        value: \"Q\",\r\n        keyCode: 81\r\n    },\r\n    {\r\n        key: \"W\",\r\n        value: \"W\",\r\n        keyCode: 87\r\n    },\r\n    {\r\n        key: \"E\",\r\n        value: \"E\",\r\n        keyCode: 69\r\n    },\r\n    {\r\n        key: \"R\",\r\n        value: \"R\",\r\n        keyCode: 82\r\n    },\r\n    {\r\n        key: \"T\",\r\n        value: \"T\",\r\n        keyCode: 84\r\n    },\r\n    {\r\n        key: \"Y\",\r\n        value: \"Y\",\r\n        keyCode: 89\r\n    },\r\n    {\r\n        key: \"U\",\r\n        value: \"U\",\r\n        keyCode: 85\r\n    },\r\n    {\r\n        key: \"I\",\r\n        value: \"I\",\r\n        keyCode: 73\r\n    },\r\n    {\r\n        key: \"O\",\r\n        value: \"O\",\r\n        keyCode: 79\r\n    },\r\n    {\r\n        key: \"P\",\r\n        value: \"P\",\r\n        keyCode: 80\r\n    },\r\n    {\r\n        key: \"[\",\r\n        value: \"[\",\r\n        keyCode: 219\r\n    },\r\n    {\r\n        key: \"]\",\r\n        value: \"]\",\r\n        keyCode: 221\r\n    },\r\n    {\r\n        key: \"\\\\\",\r\n        value: \"\\\\\",\r\n        br: true,\r\n        keyCode: 220\r\n    },\r\n    {\r\n        key: \"dxxie\",\r\n        value: \"小写\",\r\n        class: 'dxxie',\r\n        keyCode: 999\r\n    },\r\n    {\r\n        key: \"A\",\r\n        value: \"A\",\r\n        keyCode: 65\r\n    },\r\n    {\r\n        key: \"S\",\r\n        value: \"S\",\r\n        keyCode: 83\r\n    },\r\n    {\r\n        key: \"D\",\r\n        value: \"D\",\r\n        keyCode: 68\r\n    },\r\n    {\r\n        key: \"F\",\r\n        value: \"F\",\r\n        keyCode: 70\r\n    },\r\n    {\r\n        key: \"G\",\r\n        value: \"G\",\r\n        keyCode: 71\r\n    },\r\n    {\r\n        key: \"H\",\r\n        value: \"H\",\r\n        keyCode: 72\r\n    },\r\n    {\r\n        key: \"J\",\r\n        value: \"J\",\r\n        keyCode: 74\r\n    },\r\n    {\r\n        key: \"K\",\r\n        value: \"K\",\r\n        keyCode: 75\r\n    },\r\n    {\r\n        key: \"L\",\r\n        value: \"L\",\r\n        keyCode: 76\r\n    },\r\n    {\r\n        key: \";\",\r\n        value: \";\",\r\n        keyCode: 186\r\n    },\r\n    {\r\n        key: \"'\",\r\n        value: \"'\",\r\n        keyCode: 222\r\n    },\r\n    {\r\n        key: \"huiche\",\r\n        value: \"回车\",\r\n        class: 'huiche',\r\n        br: true,\r\n        keyCode: 13\r\n    },\r\n    {\r\n        key: \"zywen\",\r\n        value: \"拼音\",\r\n        class: 'zywen',\r\n        keyCode: 998\r\n    },\r\n    {\r\n        key: \"Z\",\r\n        value: \"Z\",\r\n        keyCode: 90\r\n    },\r\n    {\r\n        key: \"X\",\r\n        value: \"X\",\r\n        keyCode: 88\r\n    },\r\n    {\r\n        key: \"C\",\r\n        value: \"C\",\r\n        keyCode: 67\r\n    },\r\n    {\r\n        key: \"V\",\r\n        value: \"V\",\r\n        keyCode: 86\r\n    },\r\n    {\r\n        key: \"B\",\r\n        value: \"B\",\r\n        keyCode: 66\r\n    },\r\n    {\r\n        key: \"N\",\r\n        value: \"N\",\r\n        keyCode: 78\r\n    },\r\n    {\r\n        key: \"M\",\r\n        value: \"M\",\r\n        keyCode: 77\r\n    },\r\n    {\r\n        key: \",\",\r\n        value: \",\",\r\n        keyCode: 188\r\n    },\r\n    {\r\n        key: \".\",\r\n        value: \".\",\r\n        keyCode: 190\r\n    },\r\n    {\r\n        key: \"/\",\r\n        value: \"/\",\r\n        keyCode: 191\r\n    },\r\n    {\r\n        key: \"kongge\",\r\n        value: \"空格\",\r\n        class: 'kongge',\r\n        keyCode: 32\r\n    },\r\n    {\r\n        key: \"close\",\r\n        value: \"关闭\",\r\n        class: 'close',\r\n        keyCode: 997\r\n    }\r\n]); \n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/keys.js?");

/***/ }),

/***/ "./components/lib/ChenKeybord/pinyin_dict_notone.js":
/*!**********************************************************!*\
  !*** ./components/lib/ChenKeybord/pinyin_dict_notone.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n﻿/**\r\n * 收录常用汉字6763个，不支持声调，支持多音字，并按照汉字使用频率由低到高排序\r\n */\r\n\r\n// 实际用的是这个\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ \"a\": \"阿啊呵腌嗄吖锕\", \"e\": \"额阿俄恶鹅遏鄂厄饿峨扼娥鳄哦蛾噩愕讹锷垩婀鹗萼谔莪腭锇颚呃阏屙苊轭\", \"ai\": \"爱埃艾碍癌哀挨矮隘蔼唉皑哎霭捱暧嫒嗳瑷嗌锿砹\", \"ei\": \"诶\", \"xi\": \"系西席息希习吸喜细析戏洗悉锡溪惜稀袭夕洒晰昔牺腊烯熙媳栖膝隙犀蹊硒兮熄曦禧嬉玺奚汐徙羲铣淅嘻歙熹矽蟋郗唏皙隰樨浠忾蜥檄郄翕阋鳃舾屣葸螅咭粞觋欷僖醯鼷裼穸饩舄禊诶菥蓰\", \"yi\": \"一以已意议义益亿易医艺食依移衣异伊仪宜射遗疑毅谊亦疫役忆抑尾乙译翼蛇溢椅沂泄逸蚁夷邑怡绎彝裔姨熠贻矣屹颐倚诣胰奕翌疙弈轶蛾驿壹猗臆弋铱旖漪迤佚翊诒怿痍懿饴峄揖眙镒仡黟肄咿翳挹缢呓刈咦嶷羿钇殪荑薏蜴镱噫癔苡悒嗌瘗衤佾埸圯舣酏劓\", \"an\": \"安案按岸暗鞍氨俺胺铵谙庵黯鹌桉埯犴揞厂广\", \"han\": \"厂汉韩含旱寒汗涵函喊憾罕焊翰邯撼瀚憨捍酣悍鼾邗颔蚶晗菡旰顸犴焓撖\", \"ang\": \"昂仰盎肮\", \"ao\": \"奥澳傲熬凹鳌敖遨鏖袄坳翱嗷拗懊岙螯骜獒鏊艹媪廒聱\", \"wa\": \"瓦挖娃洼袜蛙凹哇佤娲呙腽\", \"yu\": \"于与育余预域予遇奥语誉玉鱼雨渔裕愈娱欲吁舆宇羽逾豫郁寓吾狱喻御浴愉禹俞邪榆愚渝尉淤虞屿峪粥驭瑜禺毓钰隅芋熨瘀迂煜昱汩於臾盂聿竽萸妪腴圄谕觎揄龉谀俣馀庾妤瘐鬻欤鹬阈嵛雩鹆圉蜮伛纡窬窳饫蓣狳肀舁蝓燠\", \"niu\": \"牛纽扭钮拗妞忸狃\", \"o\": \"哦噢喔\", \"ba\": \"把八巴拔伯吧坝爸霸罢芭跋扒叭靶疤笆耙鲅粑岜灞钯捌菝魃茇\", \"pa\": \"怕帕爬扒趴琶啪葩耙杷钯筢\", \"pi\": \"被批副否皮坏辟啤匹披疲罢僻毗坯脾譬劈媲屁琵邳裨痞癖陂丕枇噼霹吡纰砒铍淠郫埤濞睥芘蚍圮鼙罴蜱疋貔仳庀擗甓陴\", \"bi\": \"比必币笔毕秘避闭佛辟壁弊彼逼碧鼻臂蔽拂泌璧庇痹毙弼匕鄙陛裨贲敝蓖吡篦纰俾铋毖筚荸薜婢哔跸濞秕荜愎睥妣芘箅髀畀滗狴萆嬖襞舭\", \"bai\": \"百白败摆伯拜柏佰掰呗擘捭稗\", \"bo\": \"波博播勃拨薄佛伯玻搏柏泊舶剥渤卜驳簿脖膊簸菠礴箔铂亳钵帛擘饽跛钹趵檗啵鹁擗踣\", \"bei\": \"北被备倍背杯勃贝辈悲碑臂卑悖惫蓓陂钡狈呗焙碚褙庳鞴孛鹎邶鐾\", \"ban\": \"办版半班般板颁伴搬斑扮拌扳瓣坂阪绊钣瘢舨癍\", \"pan\": \"判盘番潘攀盼拚畔胖叛拌蹒磐爿蟠泮袢襻丬\", \"bin\": \"份宾频滨斌彬濒殡缤鬓槟摈膑玢镔豳髌傧\", \"bang\": \"帮邦彭旁榜棒膀镑绑傍磅蚌谤梆浜蒡\", \"pang\": \"旁庞乓磅螃彷滂逄耪\", \"beng\": \"泵崩蚌蹦迸绷甭嘣甏堋\", \"bao\": \"报保包宝暴胞薄爆炮饱抱堡剥鲍曝葆瀑豹刨褒雹孢苞煲褓趵鸨龅勹\", \"bu\": \"不部步布补捕堡埔卜埠簿哺怖钚卟瓿逋晡醭钸\", \"pu\": \"普暴铺浦朴堡葡谱埔扑仆蒲曝瀑溥莆圃璞濮菩蹼匍噗氆攵镨攴镤\", \"mian\": \"面棉免绵缅勉眠冕娩腼渑湎沔黾宀眄\", \"po\": \"破繁坡迫颇朴泊婆泼魄粕鄱珀陂叵笸泺皤钋钷\", \"fan\": \"反范犯繁饭泛翻凡返番贩烦拚帆樊藩矾梵蕃钒幡畈蘩蹯燔\", \"fu\": \"府服副负富复福夫妇幅付扶父符附腐赴佛浮覆辅傅伏抚赋辐腹弗肤阜袱缚甫氟斧孚敷俯拂俘咐腑孵芙涪釜脯茯馥宓绂讣呋罘麸蝠匐芾蜉跗凫滏蝮驸绋蚨砩桴赙菔呒趺苻拊阝鲋怫稃郛莩幞祓艴黻黼鳆\", \"ben\": \"本体奔苯笨夯贲锛畚坌\", \"feng\": \"风丰封峰奉凤锋冯逢缝蜂枫疯讽烽俸沣酆砜葑唪\", \"bian\": \"变便边编遍辩鞭辨贬匾扁卞汴辫砭苄蝙鳊弁窆笾煸褊碥忭缏\", \"pian\": \"便片篇偏骗翩扁骈胼蹁谝犏缏\", \"zhen\": \"镇真针圳振震珍阵诊填侦臻贞枕桢赈祯帧甄斟缜箴疹砧榛鸩轸稹溱蓁胗椹朕畛浈\", \"biao\": \"表标彪镖裱飚膘飙镳婊骠飑杓髟鳔灬瘭\", \"piao\": \"票朴漂飘嫖瓢剽缥殍瞟骠嘌莩螵\", \"huo\": \"和活或货获火伙惑霍祸豁嚯藿锪蠖钬耠镬夥灬劐攉\", \"bie\": \"别鳖憋瘪蹩\", \"min\": \"民敏闽闵皿泯岷悯珉抿黾缗玟愍苠鳘\", \"fen\": \"分份纷奋粉氛芬愤粪坟汾焚酚吩忿棼玢鼢瀵偾鲼\", \"bing\": \"并病兵冰屏饼炳秉丙摒柄槟禀枋邴冫\", \"geng\": \"更耕颈庚耿梗埂羹哽赓绠鲠\", \"fang\": \"方放房防访纺芳仿坊妨肪邡舫彷枋鲂匚钫\", \"xian\": \"现先县见线限显险献鲜洗宪纤陷闲贤仙衔掀咸嫌掺羡弦腺痫娴舷馅酰铣冼涎暹籼锨苋蚬跹岘藓燹鹇氙莶霰跣猃彡祆筅\", \"fou\": \"不否缶\", \"ca\": \"拆擦嚓礤\", \"cha\": \"查察差茶插叉刹茬楂岔诧碴嚓喳姹杈汊衩搽槎镲苴檫馇锸猹\", \"cai\": \"才采财材菜彩裁蔡猜踩睬\", \"can\": \"参残餐灿惨蚕掺璨惭粲孱骖黪\", \"shen\": \"信深参身神什审申甚沈伸慎渗肾绅莘呻婶娠砷蜃哂椹葚吲糁渖诜谂矧胂\", \"cen\": \"参岑涔\", \"san\": \"三参散伞叁糁馓毵\", \"cang\": \"藏仓苍沧舱臧伧\", \"zang\": \"藏脏葬赃臧奘驵\", \"chen\": \"称陈沈沉晨琛臣尘辰衬趁忱郴宸谌碜嗔抻榇伧谶龀肜\", \"cao\": \"草操曹槽糙嘈漕螬艚屮\", \"ce\": \"策测册侧厕栅恻\", \"ze\": \"责则泽择侧咋啧仄箦赜笮舴昃迮帻\", \"zhai\": \"债择齐宅寨侧摘窄斋祭翟砦瘵哜\", \"dao\": \"到道导岛倒刀盗稻蹈悼捣叨祷焘氘纛刂帱忉\", \"ceng\": \"层曾蹭噌\", \"zha\": \"查扎炸诈闸渣咋乍榨楂札栅眨咤柞喳喋铡蚱吒怍砟揸痄哳齄\", \"chai\": \"差拆柴钗豺侪虿瘥\", \"ci\": \"次此差词辞刺瓷磁兹慈茨赐祠伺雌疵鹚糍呲粢\", \"zi\": \"资自子字齐咨滋仔姿紫兹孜淄籽梓鲻渍姊吱秭恣甾孳訾滓锱辎趑龇赀眦缁呲笫谘嵫髭茈粢觜耔\", \"cuo\": \"措错磋挫搓撮蹉锉厝嵯痤矬瘥脞鹾\", \"chan\": \"产单阐崭缠掺禅颤铲蝉搀潺蟾馋忏婵孱觇廛谄谗澶骣羼躔蒇冁\", \"shan\": \"山单善陕闪衫擅汕扇掺珊禅删膳缮赡鄯栅煽姗跚鳝嬗潸讪舢苫疝掸膻钐剡蟮芟埏彡骟\", \"zhan\": \"展战占站崭粘湛沾瞻颤詹斩盏辗绽毡栈蘸旃谵搌\", \"xin\": \"新心信辛欣薪馨鑫芯锌忻莘昕衅歆囟忄镡\", \"lian\": \"联连练廉炼脸莲恋链帘怜涟敛琏镰濂楝鲢殓潋裢裣臁奁莶蠊蔹\", \"chang\": \"场长厂常偿昌唱畅倡尝肠敞倘猖娼淌裳徜昶怅嫦菖鲳阊伥苌氅惝鬯\", \"zhang\": \"长张章障涨掌帐胀彰丈仗漳樟账杖璋嶂仉瘴蟑獐幛鄣嫜\", \"chao\": \"超朝潮炒钞抄巢吵剿绰嘲晁焯耖怊\", \"zhao\": \"着照招找召朝赵兆昭肇罩钊沼嘲爪诏濯啁棹笊\", \"zhou\": \"调州周洲舟骤轴昼宙粥皱肘咒帚胄绉纣妯啁诌繇碡籀酎荮\", \"che\": \"车彻撤尺扯澈掣坼砗屮\", \"ju\": \"车局据具举且居剧巨聚渠距句拒俱柜菊拘炬桔惧矩鞠驹锯踞咀瞿枸掬沮莒橘飓疽钜趄踽遽琚龃椐苣裾榘狙倨榉苴讵雎锔窭鞫犋屦醵\", \"cheng\": \"成程城承称盛抢乘诚呈净惩撑澄秤橙骋逞瞠丞晟铛埕塍蛏柽铖酲裎枨\", \"rong\": \"容荣融绒溶蓉熔戎榕茸冗嵘肜狨蝾\", \"sheng\": \"生声升胜盛乘圣剩牲甸省绳笙甥嵊晟渑眚\", \"deng\": \"等登邓灯澄凳瞪蹬噔磴嶝镫簦戥\", \"zhi\": \"制之治质职只志至指织支值知识直致执置止植纸拓智殖秩旨址滞氏枝芝脂帜汁肢挚稚酯掷峙炙栉侄芷窒咫吱趾痔蜘郅桎雉祉郦陟痣蛭帙枳踯徵胝栀贽祗豸鸷摭轵卮轾彘觯絷跖埴夂黹忮骘膣踬\", \"zheng\": \"政正证争整征郑丁症挣蒸睁铮筝拯峥怔诤狰徵钲\", \"tang\": \"堂唐糖汤塘躺趟倘棠烫淌膛搪镗傥螳溏帑羰樘醣螗耥铴瑭\", \"chi\": \"持吃池迟赤驰尺斥齿翅匙痴耻炽侈弛叱啻坻眙嗤墀哧茌豉敕笞饬踟蚩柢媸魑篪褫彳鸱螭瘛眵傺\", \"shi\": \"是时实事市十使世施式势视识师史示石食始士失适试什泽室似诗饰殖释驶氏硕逝湿蚀狮誓拾尸匙仕柿矢峙侍噬嗜栅拭嘘屎恃轼虱耆舐莳铈谥炻豕鲥饣螫酾筮埘弑礻蓍鲺贳\", \"qi\": \"企其起期气七器汽奇齐启旗棋妻弃揭枝歧欺骑契迄亟漆戚岂稽岐琦栖缉琪泣乞砌祁崎绮祺祈凄淇杞脐麒圻憩芪伎俟畦耆葺沏萋骐鳍綦讫蕲屺颀亓碛柒啐汔綮萁嘁蛴槭欹芑桤丌蜞\", \"chuai\": \"揣踹啜搋膪\", \"tuo\": \"托脱拓拖妥驼陀沱鸵驮唾椭坨佗砣跎庹柁橐乇铊沲酡鼍箨柝\", \"duo\": \"多度夺朵躲铎隋咄堕舵垛惰哆踱跺掇剁柁缍沲裰哚隳\", \"xue\": \"学血雪削薛穴靴谑噱鳕踅泶彐\", \"chong\": \"重种充冲涌崇虫宠忡憧舂茺铳艟\", \"chou\": \"筹抽绸酬愁丑臭仇畴稠瞅踌惆俦瘳雠帱\", \"qiu\": \"求球秋丘邱仇酋裘龟囚遒鳅虬蚯泅楸湫犰逑巯艽俅蝤赇鼽糗\", \"xiu\": \"修秀休宿袖绣臭朽锈羞嗅岫溴庥馐咻髹鸺貅\", \"chu\": \"出处础初助除储畜触楚厨雏矗橱锄滁躇怵绌搐刍蜍黜杵蹰亍樗憷楮\", \"tuan\": \"团揣湍疃抟彖\", \"zhui\": \"追坠缀揣椎锥赘惴隹骓缒\", \"chuan\": \"传川船穿串喘椽舛钏遄氚巛舡\", \"zhuan\": \"专转传赚砖撰篆馔啭颛\", \"yuan\": \"元员院原源远愿园援圆缘袁怨渊苑宛冤媛猿垣沅塬垸鸳辕鸢瑗圜爰芫鼋橼螈眢箢掾\", \"cuan\": \"窜攒篡蹿撺爨汆镩\", \"chuang\": \"创床窗闯幢疮怆\", \"zhuang\": \"装状庄壮撞妆幢桩奘僮戆\", \"chui\": \"吹垂锤炊椎陲槌捶棰\", \"chun\": \"春纯醇淳唇椿蠢鹑朐莼肫蝽\", \"zhun\": \"准屯淳谆肫窀\", \"cu\": \"促趋趣粗簇醋卒蹴猝蹙蔟殂徂\", \"dun\": \"吨顿盾敦蹲墩囤沌钝炖盹遁趸砘礅\", \"qu\": \"区去取曲趋渠趣驱屈躯衢娶祛瞿岖龋觑朐蛐癯蛆苣阒诎劬蕖蘧氍黢蠼璩麴鸲磲\", \"xu\": \"需许续须序徐休蓄畜虚吁绪叙旭邪恤墟栩絮圩婿戌胥嘘浒煦酗诩朐盱蓿溆洫顼勖糈砉醑\", \"chuo\": \"辍绰戳淖啜龊踔辶\", \"zu\": \"组族足祖租阻卒俎诅镞菹\", \"ji\": \"济机其技基记计系期际及集级几给积极己纪即继击既激绩急奇吉季齐疾迹鸡剂辑籍寄挤圾冀亟寂暨脊跻肌稽忌饥祭缉棘矶汲畸姬藉瘠骥羁妓讥稷蓟悸嫉岌叽伎鲫诘楫荠戟箕霁嵇觊麂畿玑笈犄芨唧屐髻戢佶偈笄跽蒺乩咭赍嵴虮掎齑殛鲚剞洎丌墼蕺彐芰哜\", \"cong\": \"从丛匆聪葱囱琮淙枞骢苁璁\", \"zong\": \"总从综宗纵踪棕粽鬃偬枞腙\", \"cou\": \"凑辏腠楱\", \"cui\": \"衰催崔脆翠萃粹摧璀瘁悴淬啐隹毳榱\", \"wei\": \"为位委未维卫围违威伟危味微唯谓伪慰尾魏韦胃畏帷喂巍萎蔚纬潍尉渭惟薇苇炜圩娓诿玮崴桅偎逶倭猥囗葳隗痿猬涠嵬韪煨艉隹帏闱洧沩隈鲔軎\", \"cun\": \"村存寸忖皴\", \"zuo\": \"作做座左坐昨佐琢撮祚柞唑嘬酢怍笮阼胙\", \"zuan\": \"钻纂攥缵躜\", \"da\": \"大达打答搭沓瘩惮嗒哒耷鞑靼褡笪怛妲\", \"dai\": \"大代带待贷毒戴袋歹呆隶逮岱傣棣怠殆黛甙埭诒绐玳呔迨\", \"tai\": \"大台太态泰抬胎汰钛苔薹肽跆邰鲐酞骀炱\", \"ta\": \"他它她拓塔踏塌榻沓漯獭嗒挞蹋趿遢铊鳎溻闼\", \"dan\": \"但单石担丹胆旦弹蛋淡诞氮郸耽殚惮儋眈疸澹掸膻啖箪聃萏瘅赕\", \"lu\": \"路六陆录绿露鲁卢炉鹿禄赂芦庐碌麓颅泸卤潞鹭辘虏璐漉噜戮鲈掳橹轳逯渌蓼撸鸬栌氇胪镥簏舻辂垆\", \"tan\": \"谈探坦摊弹炭坛滩贪叹谭潭碳毯瘫檀痰袒坍覃忐昙郯澹钽锬\", \"ren\": \"人任认仁忍韧刃纫饪妊荏稔壬仞轫亻衽\", \"jie\": \"家结解价界接节她届介阶街借杰洁截姐揭捷劫戒皆竭桔诫楷秸睫藉拮芥诘碣嗟颉蚧孑婕疖桀讦疥偈羯袷哜喈卩鲒骱\", \"yan\": \"研严验演言眼烟沿延盐炎燕岩宴艳颜殷彦掩淹阎衍铅雁咽厌焰堰砚唁焉晏檐蜒奄俨腌妍谚兖筵焱偃闫嫣鄢湮赝胭琰滟阉魇酽郾恹崦芫剡鼹菸餍埏谳讠厣罨\", \"dang\": \"当党档荡挡宕砀铛裆凼菪谠\", \"tao\": \"套讨跳陶涛逃桃萄淘掏滔韬叨洮啕绦饕鼗\", \"tiao\": \"条调挑跳迢眺苕窕笤佻啁粜髫铫祧龆蜩鲦\", \"te\": \"特忑忒铽慝\", \"de\": \"的地得德底锝\", \"dei\": \"得\", \"di\": \"的地第提低底抵弟迪递帝敌堤蒂缔滴涤翟娣笛棣荻谛狄邸嘀砥坻诋嫡镝碲骶氐柢籴羝睇觌\", \"ti\": \"体提题弟替梯踢惕剔蹄棣啼屉剃涕锑倜悌逖嚏荑醍绨鹈缇裼\", \"tui\": \"推退弟腿褪颓蜕忒煺\", \"you\": \"有由又优游油友右邮尤忧幼犹诱悠幽佑釉柚铀鱿囿酉攸黝莠猷蝣疣呦蚴莸莜铕宥繇卣牖鼬尢蚰侑\", \"dian\": \"电点店典奠甸碘淀殿垫颠滇癫巅惦掂癜玷佃踮靛钿簟坫阽\", \"tian\": \"天田添填甜甸恬腆佃舔钿阗忝殄畋栝掭\", \"zhu\": \"主术住注助属逐宁著筑驻朱珠祝猪诸柱竹铸株瞩嘱贮煮烛苎褚蛛拄铢洙竺蛀渚伫杼侏澍诛茱箸炷躅翥潴邾槠舳橥丶瘃麈疰\", \"nian\": \"年念酿辗碾廿捻撵拈蔫鲶埝鲇辇黏\", \"diao\": \"调掉雕吊钓刁貂凋碉鲷叼铫铞\", \"yao\": \"要么约药邀摇耀腰遥姚窑瑶咬尧钥谣肴夭侥吆疟妖幺杳舀窕窈曜鹞爻繇徭轺铫鳐崾珧\", \"die\": \"跌叠蝶迭碟爹谍牒耋佚喋堞瓞鲽垤揲蹀\", \"she\": \"设社摄涉射折舍蛇拾舌奢慑赦赊佘麝歙畲厍猞揲滠\", \"ye\": \"业也夜叶射野液冶喝页爷耶邪咽椰烨掖拽曳晔谒腋噎揶靥邺铘揲\", \"xie\": \"些解协写血叶谢械鞋胁斜携懈契卸谐泄蟹邪歇泻屑挟燮榭蝎撷偕亵楔颉缬邂鲑瀣勰榍薤绁渫廨獬躞\", \"zhe\": \"这者着著浙折哲蔗遮辙辄柘锗褶蜇蛰鹧谪赭摺乇磔螫\", \"ding\": \"定订顶丁鼎盯钉锭叮仃铤町酊啶碇腚疔玎耵\", \"diu\": \"丢铥\", \"ting\": \"听庭停厅廷挺亭艇婷汀铤烃霆町蜓葶梃莛\", \"dong\": \"动东董冬洞懂冻栋侗咚峒氡恫胴硐垌鸫岽胨\", \"tong\": \"同通统童痛铜桶桐筒彤侗佟潼捅酮砼瞳恸峒仝嗵僮垌茼\", \"zhong\": \"中重种众终钟忠仲衷肿踵冢盅蚣忪锺舯螽夂\", \"dou\": \"都斗读豆抖兜陡逗窦渎蚪痘蔸钭篼\", \"du\": \"度都独督读毒渡杜堵赌睹肚镀渎笃竺嘟犊妒牍蠹椟黩芏髑\", \"duan\": \"断段短端锻缎煅椴簖\", \"dui\": \"对队追敦兑堆碓镦怼憝\", \"rui\": \"瑞兑锐睿芮蕊蕤蚋枘\", \"yue\": \"月说约越乐跃兑阅岳粤悦曰钥栎钺樾瀹龠哕刖\", \"tun\": \"吞屯囤褪豚臀饨暾氽\", \"hui\": \"会回挥汇惠辉恢徽绘毁慧灰贿卉悔秽溃荟晖彗讳诲珲堕诙蕙晦睢麾烩茴喙桧蛔洄浍虺恚蟪咴隳缋哕\", \"wu\": \"务物无五武午吴舞伍污乌误亡恶屋晤悟吾雾芜梧勿巫侮坞毋诬呜钨邬捂鹜兀婺妩於戊鹉浯蜈唔骛仵焐芴鋈庑鼯牾怃圬忤痦迕杌寤阢\", \"ya\": \"亚压雅牙押鸭呀轧涯崖邪芽哑讶鸦娅衙丫蚜碣垭伢氩桠琊揠吖睚痖疋迓岈砑\", \"he\": \"和合河何核盖贺喝赫荷盒鹤吓呵苛禾菏壑褐涸阂阖劾诃颌嗬貉曷翮纥盍\", \"wo\": \"我握窝沃卧挝涡斡渥幄蜗喔倭莴龌肟硪\", \"en\": \"恩摁蒽\", \"n\": \"嗯唔\", \"er\": \"而二尔儿耳迩饵洱贰铒珥佴鸸鲕\", \"fa\": \"发法罚乏伐阀筏砝垡珐\", \"quan\": \"全权券泉圈拳劝犬铨痊诠荃醛蜷颧绻犭筌鬈悛辁畎\", \"fei\": \"费非飞肥废菲肺啡沸匪斐蜚妃诽扉翡霏吠绯腓痱芾淝悱狒榧砩鲱篚镄\", \"pei\": \"配培坏赔佩陪沛裴胚妃霈淠旆帔呸醅辔锫\", \"ping\": \"平评凭瓶冯屏萍苹乒坪枰娉俜鲆\", \"fo\": \"佛\", \"hu\": \"和护许户核湖互乎呼胡戏忽虎沪糊壶葫狐蝴弧瑚浒鹄琥扈唬滹惚祜囫斛笏芴醐猢怙唿戽槲觳煳鹕冱瓠虍岵鹱烀轷\", \"ga\": \"夹咖嘎尬噶旮伽尕钆尜\", \"ge\": \"个合各革格歌哥盖隔割阁戈葛鸽搁胳舸疙铬骼蛤咯圪镉颌仡硌嗝鬲膈纥袼搿塥哿虼\", \"ha\": \"哈蛤铪\", \"xia\": \"下夏峡厦辖霞夹虾狭吓侠暇遐瞎匣瑕唬呷黠硖罅狎瘕柙\", \"gai\": \"改该盖概溉钙丐芥赅垓陔戤\", \"hai\": \"海还害孩亥咳骸骇氦嗨胲醢\", \"gan\": \"干感赶敢甘肝杆赣乾柑尴竿秆橄矸淦苷擀酐绀泔坩旰疳澉\", \"gang\": \"港钢刚岗纲冈杠缸扛肛罡戆筻\", \"jiang\": \"将强江港奖讲降疆蒋姜浆匠酱僵桨绛缰犟豇礓洚茳糨耩\", \"hang\": \"行航杭巷夯吭桁沆绗颃\", \"gong\": \"工公共供功红贡攻宫巩龚恭拱躬弓汞蚣珙觥肱廾\", \"hong\": \"红宏洪轰虹鸿弘哄烘泓訇蕻闳讧荭黉薨\", \"guang\": \"广光逛潢犷胱咣桄\", \"qiong\": \"穷琼穹邛茕筇跫蛩銎\", \"gao\": \"高告搞稿膏糕镐皋羔锆杲郜睾诰藁篙缟槁槔\", \"hao\": \"好号毫豪耗浩郝皓昊皋蒿壕灏嚎濠蚝貉颢嗥薅嚆\", \"li\": \"理力利立里李历例离励礼丽黎璃厉厘粒莉梨隶栗荔沥犁漓哩狸藜罹篱鲤砺吏澧俐骊溧砾莅锂笠蠡蛎痢雳俪傈醴栎郦俚枥喱逦娌鹂戾砬唳坜疠蜊黧猁鬲粝蓠呖跞疬缡鲡鳢嫠詈悝苈篥轹\", \"jia\": \"家加价假佳架甲嘉贾驾嫁夹稼钾挟拮迦伽颊浃枷戛荚痂颉镓笳珈岬胛袈郏葭袷瘕铗跏蛱恝哿\", \"luo\": \"落罗络洛逻螺锣骆萝裸漯烙摞骡咯箩珞捋荦硌雒椤镙跞瘰泺脶猡倮蠃\", \"ke\": \"可科克客刻课颗渴壳柯棵呵坷恪苛咳磕珂稞瞌溘轲窠嗑疴蝌岢铪颏髁蚵缂氪骒钶锞\", \"qia\": \"卡恰洽掐髂袷咭葜\", \"gei\": \"给\", \"gen\": \"根跟亘艮哏茛\", \"hen\": \"很狠恨痕哏\", \"gou\": \"构购够句沟狗钩拘勾苟垢枸篝佝媾诟岣彀缑笱鞲觏遘\", \"kou\": \"口扣寇叩抠佝蔻芤眍筘\", \"gu\": \"股古顾故固鼓骨估谷贾姑孤雇辜菇沽咕呱锢钴箍汩梏痼崮轱鸪牯蛊诂毂鹘菰罟嘏臌觚瞽蛄酤牿鲴\", \"pai\": \"牌排派拍迫徘湃俳哌蒎\", \"gua\": \"括挂瓜刮寡卦呱褂剐胍诖鸹栝呙\", \"tou\": \"投头透偷愉骰亠\", \"guai\": \"怪拐乖\", \"kuai\": \"会快块筷脍蒯侩浍郐蒉狯哙\", \"guan\": \"关管观馆官贯冠惯灌罐莞纶棺斡矜倌鹳鳏盥掼涫\", \"wan\": \"万完晚湾玩碗顽挽弯蔓丸莞皖宛婉腕蜿惋烷琬畹豌剜纨绾脘菀芄箢\", \"ne\": \"呢哪呐讷疒\", \"gui\": \"规贵归轨桂柜圭鬼硅瑰跪龟匮闺诡癸鳜桧皈鲑刽晷傀眭妫炅庋簋刿宄匦\", \"jun\": \"军均俊君峻菌竣钧骏龟浚隽郡筠皲麇捃\", \"jiong\": \"窘炯迥炅冂扃\", \"jue\": \"决绝角觉掘崛诀獗抉爵嚼倔厥蕨攫珏矍蹶谲镢鳜噱桷噘撅橛孓觖劂爝\", \"gun\": \"滚棍辊衮磙鲧绲丨\", \"hun\": \"婚混魂浑昏棍珲荤馄诨溷阍\", \"guo\": \"国过果郭锅裹帼涡椁囗蝈虢聒埚掴猓崞蜾呙馘\", \"hei\": \"黑嘿嗨\", \"kan\": \"看刊勘堪坎砍侃嵌槛瞰阚龛戡凵莰\", \"heng\": \"衡横恒亨哼珩桁蘅\", \"mo\": \"万没么模末冒莫摩墨默磨摸漠脉膜魔沫陌抹寞蘑摹蓦馍茉嘿谟秣蟆貉嫫镆殁耱嬷麽瘼貊貘\", \"peng\": \"鹏朋彭膨蓬碰苹棚捧亨烹篷澎抨硼怦砰嘭蟛堋\", \"hou\": \"后候厚侯猴喉吼逅篌糇骺後鲎瘊堠\", \"hua\": \"化华划话花画滑哗豁骅桦猾铧砉\", \"huai\": \"怀坏淮徊槐踝\", \"huan\": \"还环换欢患缓唤焕幻痪桓寰涣宦垸洹浣豢奂郇圜獾鲩鬟萑逭漶锾缳擐\", \"xun\": \"讯训迅孙寻询循旬巡汛勋逊熏徇浚殉驯鲟薰荀浔洵峋埙巽郇醺恂荨窨蕈曛獯\", \"huang\": \"黄荒煌皇凰慌晃潢谎惶簧璜恍幌湟蝗磺隍徨遑肓篁鳇蟥癀\", \"nai\": \"能乃奶耐奈鼐萘氖柰佴艿\", \"luan\": \"乱卵滦峦鸾栾銮挛孪脔娈\", \"qie\": \"切且契窃茄砌锲怯伽惬妾趄挈郄箧慊\", \"jian\": \"建间件见坚检健监减简艰践兼鉴键渐柬剑尖肩舰荐箭浅剪俭碱茧奸歼拣捡煎贱溅槛涧堑笺谏饯锏缄睑謇蹇腱菅翦戬毽笕犍硷鞯牮枧湔鲣囝裥踺搛缣鹣蒹谫僭戋趼楗\", \"nan\": \"南难男楠喃囡赧腩囝蝻\", \"qian\": \"前千钱签潜迁欠纤牵浅遣谦乾铅歉黔谴嵌倩钳茜虔堑钎骞阡掮钤扦芊犍荨仟芡悭缱佥愆褰凵肷岍搴箝慊椠\", \"qiang\": \"强抢疆墙枪腔锵呛羌蔷襁羟跄樯戕嫱戗炝镪锖蜣\", \"xiang\": \"向项相想乡象响香降像享箱羊祥湘详橡巷翔襄厢镶飨饷缃骧芗庠鲞葙蟓\", \"jiao\": \"教交较校角觉叫脚缴胶轿郊焦骄浇椒礁佼蕉娇矫搅绞酵剿嚼饺窖跤蛟侥狡姣皎茭峤铰醮鲛湫徼鹪僬噍艽挢敫\", \"zhuo\": \"着著缴桌卓捉琢灼浊酌拙茁涿镯淖啄濯焯倬擢斫棹诼浞禚\", \"qiao\": \"桥乔侨巧悄敲俏壳雀瞧翘窍峭锹撬荞跷樵憔鞘橇峤诮谯愀鞒硗劁缲\", \"xiao\": \"小效销消校晓笑肖削孝萧俏潇硝宵啸嚣霄淆哮筱逍姣箫骁枭哓绡蛸崤枵魈\", \"si\": \"司四思斯食私死似丝饲寺肆撕泗伺嗣祀厮驷嘶锶俟巳蛳咝耜笥纟糸鸶缌澌姒汜厶兕\", \"kai\": \"开凯慨岂楷恺揩锴铠忾垲剀锎蒈\", \"jin\": \"进金今近仅紧尽津斤禁锦劲晋谨筋巾浸襟靳瑾烬缙钅矜觐堇馑荩噤廑妗槿赆衿卺\", \"qin\": \"亲勤侵秦钦琴禽芹沁寝擒覃噙矜嗪揿溱芩衾廑锓吣檎螓\", \"jing\": \"经京精境竞景警竟井惊径静劲敬净镜睛晶颈荆兢靖泾憬鲸茎腈菁胫阱旌粳靓痉箐儆迳婧肼刭弪獍\", \"ying\": \"应营影英景迎映硬盈赢颖婴鹰荧莹樱瑛蝇萦莺颍膺缨瀛楹罂荥萤鹦滢蓥郢茔嘤璎嬴瘿媵撄潆\", \"jiu\": \"就究九酒久救旧纠舅灸疚揪咎韭玖臼柩赳鸠鹫厩啾阄桕僦鬏\", \"zui\": \"最罪嘴醉咀蕞觜\", \"juan\": \"卷捐圈眷娟倦绢隽镌涓鹃鄄蠲狷锩桊\", \"suan\": \"算酸蒜狻\", \"yun\": \"员运云允孕蕴韵酝耘晕匀芸陨纭郧筠恽韫郓氲殒愠昀菀狁\", \"qun\": \"群裙逡麇\", \"ka\": \"卡喀咖咔咯佧胩\", \"kang\": \"康抗扛慷炕亢糠伉钪闶\", \"keng\": \"坑铿吭\", \"kao\": \"考靠烤拷铐栲尻犒\", \"ken\": \"肯垦恳啃龈裉\", \"yin\": \"因引银印音饮阴隐姻殷淫尹荫吟瘾寅茵圻垠鄞湮蚓氤胤龈窨喑铟洇狺夤廴吲霪茚堙\", \"kong\": \"空控孔恐倥崆箜\", \"ku\": \"苦库哭酷裤枯窟挎骷堀绔刳喾\", \"kua\": \"跨夸垮挎胯侉\", \"kui\": \"亏奎愧魁馈溃匮葵窥盔逵睽馗聩喟夔篑岿喹揆隗傀暌跬蒉愦悝蝰\", \"kuan\": \"款宽髋\", \"kuang\": \"况矿框狂旷眶匡筐邝圹哐贶夼诳诓纩\", \"que\": \"确却缺雀鹊阙瘸榷炔阕悫\", \"kun\": \"困昆坤捆琨锟鲲醌髡悃阃\", \"kuo\": \"扩括阔廓蛞\", \"la\": \"拉落垃腊啦辣蜡喇剌旯砬邋瘌\", \"lai\": \"来莱赖睐徕籁涞赉濑癞崃疠铼\", \"lan\": \"兰览蓝篮栏岚烂滥缆揽澜拦懒榄斓婪阑褴罱啉谰镧漤\", \"lin\": \"林临邻赁琳磷淋麟霖鳞凛拎遴蔺吝粼嶙躏廪檩啉辚膦瞵懔\", \"lang\": \"浪朗郎廊狼琅榔螂阆锒莨啷蒗稂\", \"liang\": \"量两粮良辆亮梁凉谅粱晾靓踉莨椋魉墚\", \"lao\": \"老劳落络牢捞涝烙姥佬崂唠酪潦痨醪铑铹栳耢\", \"mu\": \"目模木亩幕母牧莫穆姆墓慕牟牡募睦缪沐暮拇姥钼苜仫毪坶\", \"le\": \"了乐勒肋叻鳓嘞仂泐\", \"lei\": \"类累雷勒泪蕾垒磊擂镭肋羸耒儡嫘缧酹嘞诔檑\", \"sui\": \"随岁虽碎尿隧遂髓穗绥隋邃睢祟濉燧谇眭荽\", \"lie\": \"列烈劣裂猎冽咧趔洌鬣埒捩躐\", \"leng\": \"冷愣棱楞塄\", \"ling\": \"领令另零灵龄陵岭凌玲铃菱棱伶羚苓聆翎泠瓴囹绫呤棂蛉酃鲮柃\", \"lia\": \"俩\", \"liao\": \"了料疗辽廖聊寥缪僚燎缭撂撩嘹潦镣寮蓼獠钌尥鹩\", \"liu\": \"流刘六留柳瘤硫溜碌浏榴琉馏遛鎏骝绺镏旒熘鹨锍\", \"lun\": \"论轮伦仑纶沦抡囵\", \"lv\": \"率律旅绿虑履吕铝屡氯缕滤侣驴榈闾偻褛捋膂稆\", \"lou\": \"楼露漏陋娄搂篓喽镂偻瘘髅耧蝼嵝蒌\", \"mao\": \"贸毛矛冒貌茂茅帽猫髦锚懋袤牦卯铆耄峁瑁蟊茆蝥旄泖昴瞀\", \"long\": \"龙隆弄垄笼拢聋陇胧珑窿茏咙砻垅泷栊癃\", \"nong\": \"农浓弄脓侬哝\", \"shuang\": \"双爽霜孀泷\", \"shu\": \"术书数属树输束述署朱熟殊蔬舒疏鼠淑叔暑枢墅俞曙抒竖蜀薯梳戍恕孰沭赎庶漱塾倏澍纾姝菽黍腧秫毹殳疋摅\", \"shuai\": \"率衰帅摔甩蟀\", \"lve\": \"略掠锊\", \"ma\": \"么马吗摩麻码妈玛嘛骂抹蚂唛蟆犸杩\", \"me\": \"么麽\", \"mai\": \"买卖麦迈脉埋霾荬劢\", \"man\": \"满慢曼漫埋蔓瞒蛮鳗馒幔谩螨熳缦镘颟墁鞔\", \"mi\": \"米密秘迷弥蜜谜觅靡泌眯麋猕谧咪糜宓汨醚嘧弭脒冖幂祢縻蘼芈糸敉\", \"men\": \"们门闷瞒汶扪焖懑鞔钔\", \"mang\": \"忙盲茫芒氓莽蟒邙硭漭\", \"meng\": \"蒙盟梦猛孟萌氓朦锰檬勐懵蟒蜢虻黾蠓艨甍艋瞢礞\", \"miao\": \"苗秒妙描庙瞄缪渺淼藐缈邈鹋杪眇喵\", \"mou\": \"某谋牟缪眸哞鍪蛑侔厶\", \"miu\": \"缪谬\", \"mei\": \"美没每煤梅媒枚妹眉魅霉昧媚玫酶镁湄寐莓袂楣糜嵋镅浼猸鹛\", \"wen\": \"文问闻稳温纹吻蚊雯紊瘟汶韫刎璺玟阌\", \"mie\": \"灭蔑篾乜咩蠛\", \"ming\": \"明名命鸣铭冥茗溟酩瞑螟暝\", \"na\": \"内南那纳拿哪娜钠呐捺衲镎肭\", \"nei\": \"内那哪馁\", \"nuo\": \"难诺挪娜糯懦傩喏搦锘\", \"ruo\": \"若弱偌箬\", \"nang\": \"囊馕囔曩攮\", \"nao\": \"脑闹恼挠瑙淖孬垴铙桡呶硇猱蛲\", \"ni\": \"你尼呢泥疑拟逆倪妮腻匿霓溺旎昵坭铌鲵伲怩睨猊\", \"nen\": \"嫩恁\", \"neng\": \"能\", \"nin\": \"您恁\", \"niao\": \"鸟尿溺袅脲茑嬲\", \"nie\": \"摄聂捏涅镍孽捻蘖啮蹑嗫臬镊颞乜陧\", \"niang\": \"娘酿\", \"ning\": \"宁凝拧泞柠咛狞佞聍甯\", \"nu\": \"努怒奴弩驽帑孥胬\", \"nv\": \"女钕衄恧\", \"ru\": \"入如女乳儒辱汝茹褥孺濡蠕嚅缛溽铷洳薷襦颥蓐\", \"nuan\": \"暖\", \"nve\": \"虐疟\", \"re\": \"热若惹喏\", \"ou\": \"区欧偶殴呕禺藕讴鸥瓯沤耦怄\", \"pao\": \"跑炮泡抛刨袍咆疱庖狍匏脬\", \"pou\": \"剖掊裒\", \"pen\": \"喷盆湓\", \"pie\": \"瞥撇苤氕丿\", \"pin\": \"品贫聘频拼拚颦姘嫔榀牝\", \"se\": \"色塞瑟涩啬穑铯槭\", \"qing\": \"情青清请亲轻庆倾顷卿晴氢擎氰罄磬蜻箐鲭綮苘黥圊檠謦\", \"zan\": \"赞暂攒堑昝簪糌瓒錾趱拶\", \"shao\": \"少绍召烧稍邵哨韶捎勺梢鞘芍苕劭艄筲杓潲\", \"sao\": \"扫骚嫂梢缫搔瘙臊埽缲鳋\", \"sha\": \"沙厦杀纱砂啥莎刹杉傻煞鲨霎嗄痧裟挲铩唼歃\", \"xuan\": \"县选宣券旋悬轩喧玄绚渲璇炫萱癣漩眩暄煊铉楦泫谖痃碹揎镟儇\", \"ran\": \"然染燃冉苒髯蚺\", \"rang\": \"让壤攘嚷瓤穰禳\", \"rao\": \"绕扰饶娆桡荛\", \"reng\": \"仍扔\", \"ri\": \"日\", \"rou\": \"肉柔揉糅鞣蹂\", \"ruan\": \"软阮朊\", \"run\": \"润闰\", \"sa\": \"萨洒撒飒卅仨脎\", \"suo\": \"所些索缩锁莎梭琐嗦唆唢娑蓑羧挲桫嗍睃\", \"sai\": \"思赛塞腮噻鳃\", \"shui\": \"说水税谁睡氵\", \"sang\": \"桑丧嗓搡颡磉\", \"sen\": \"森\", \"seng\": \"僧\", \"shai\": \"筛晒\", \"shang\": \"上商尚伤赏汤裳墒晌垧觞殇熵绱\", \"xing\": \"行省星腥猩惺兴刑型形邢饧醒幸杏性姓陉荇荥擤悻硎\", \"shou\": \"收手受首售授守寿瘦兽狩绶艏扌\", \"shuo\": \"说数硕烁朔铄妁槊蒴搠\", \"su\": \"速素苏诉缩塑肃俗宿粟溯酥夙愫簌稣僳谡涑蔌嗉觫\", \"shua\": \"刷耍唰\", \"shuan\": \"栓拴涮闩\", \"shun\": \"顺瞬舜吮\", \"song\": \"送松宋讼颂耸诵嵩淞怂悚崧凇忪竦菘\", \"sou\": \"艘搜擞嗽嗖叟馊薮飕嗾溲锼螋瞍\", \"sun\": \"损孙笋荪榫隼狲飧\", \"teng\": \"腾疼藤滕誊\", \"tie\": \"铁贴帖餮萜\", \"tu\": \"土突图途徒涂吐屠兔秃凸荼钍菟堍酴\", \"wai\": \"外歪崴\", \"wang\": \"王望往网忘亡旺汪枉妄惘罔辋魍\", \"weng\": \"翁嗡瓮蓊蕹\", \"zhua\": \"抓挝爪\", \"yang\": \"样养央阳洋扬杨羊详氧仰秧痒漾疡泱殃恙鸯徉佯怏炀烊鞅蛘\", \"xiong\": \"雄兄熊胸凶匈汹芎\", \"yo\": \"哟唷\", \"yong\": \"用永拥勇涌泳庸俑踊佣咏雍甬镛臃邕蛹恿慵壅痈鳙墉饔喁\", \"za\": \"杂扎咱砸咋匝咂拶\", \"zai\": \"在再灾载栽仔宰哉崽甾\", \"zao\": \"造早遭枣噪灶燥糟凿躁藻皂澡蚤唣\", \"zei\": \"贼\", \"zen\": \"怎谮\", \"zeng\": \"增曾综赠憎锃甑罾缯\", \"zhei\": \"这\", \"zou\": \"走邹奏揍诹驺陬楱鄹鲰\", \"zhuai\": \"转拽\", \"zun\": \"尊遵鳟樽撙\", \"dia\": \"嗲\", \"nou\": \"耨\" });\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/pinyin_dict_notone.js?");

/***/ }),

/***/ "./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib??vue-loader-options!./components/lib/ChenKeybord/index.vue?vue&type=script&lang=js ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keys.js */ \"./components/lib/ChenKeybord/keys.js\");\n/* harmony import */ var _pinyin_dict_notone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pinyin_dict_notone */ \"./components/lib/ChenKeybord/pinyin_dict_notone.js\");\n\r\n// 键盘的对象-属性-值\r\n\r\n// 拼音转汉字的字典\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    name: 'ChenKeyboard',\r\n    data: function () {\r\n        return {\r\n            islowercase: true,// 是否是小写\r\n            ispinyin: true,// 是否是拼音输入\r\n            hanzi: '', // 候选汉字\r\n            pinyin: '', // 候选拼音\r\n            chineseResult: [], // 当前匹配到的汉字集合\r\n            pageCurrent: 1, // 当前页\r\n            pageSize: 10, // 每页大小\r\n            pageCount: 0, // 总页数\r\n            myField: null,//文本域；用于显示文本,\r\n            simle_input_method: null,// 拼音输入盒子\r\n            pinyinTarget: null,// 显示拼音的盒子\r\n            chineseResultTarget: null,  // 显示拼音输入-预选字的盒子\r\n            pinyinUtilDict: { // 输入功能\r\n                dict: {//字典\r\n                    py2hz: {},//拼音转汉字\r\n                    py2hz2: {}//特俗字符的字典\r\n                }\r\n            },\r\n            textValue: ''\r\n            // 是否显示键盘\r\n            // isShowKeyboard: true\r\n        }\r\n    },\r\n    props: {\r\n        isShowKeyboard: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        //重新渲染初始化；键盘\r\n        //渲染-》键盘的按钮\r\n        renderKeys() {\r\n            let keysBox = document.querySelector('#keys');\r\n            let html = '';\r\n            // 遍历键盘的keys的值，用于在键盘盒子自动生成键盘的功能\r\n            for (let i = 0; i < _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].length; i++) {\r\n                // 主要就是处理按钮的输入状态切换\r\n                switch (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key) {\r\n                    // 是否键盘按下的键的key-->小写\r\n                    case 'dxxie':\r\n                        // 大小写button文字的改变\r\n                        html += `<b><button class=\"${this.islowercase ? 'lowercase' : ''} ${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].class || ''}\" data-key=\"${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key}\">${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key == 'dxxie' ? (this.islowercase ? '小写' : '大写') : _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value}</button></b>`\r\n                        break\r\n                    //  // 是否键盘按下的键的key-->拼音\r\n                    case 'zywen':\r\n                        // 拼音-字母-button文字的改变\r\n                        html += `<b><button class=\"${this.islowercase ? 'lowercase' : ''} ${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].class || ''}\" data-key=\"${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key}\">${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key == 'zywen' ? (this.ispinyin ? '拼音' : '字母') : _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value}</button></b>`\r\n                        break\r\n                    // 生成按钮\r\n                    default:\r\n                        html += `<b><button class=\"${this.islowercase ? 'lowercase' : ''} ${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].class || ''}\" data-key=\"${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].key}\">${_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value}</button></b>`\r\n                }\r\n                if (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].br) {\r\n                    // console.log(keys[i].br);\r\n                    html += '</br>'\r\n                }\r\n                // console.log(html);\r\n            }\r\n            // 渲染键盘的页面结构\r\n            if (keysBox) {\r\n                keysBox.innerHTML = html\r\n                // 给键盘所有的按键都绑定一个点击事件\r\n                this.keysBind(keysBox)\r\n                // 为键盘的dom设置鼠标按下监听--用于阻止鼠标默认行为\r\n                keysBox.addEventListener(\"mousedown\", (e) => {\r\n                    // console.log(e.target.id);\r\n                    if (e.target.id !== \"keys\") {\r\n                        // 阻止键盘的默认行为\r\n                        e.preventDefault()\r\n                    }\r\n                }, false);\r\n            }\r\n\r\n\r\n        },\r\n        //按键监听\r\n        keysBind(keysBox) {\r\n            // 返回 NodeList 对象；虚拟对象\r\n            let btns = keysBox.querySelectorAll('button')\r\n            // 为所有的键盘按键设置：click事件监听\r\n            for (let i = 0; i < btns.length; i++) {\r\n                btns[i].addEventListener('click', () => {\r\n                    // console.log(this);\r\n                    this.btnClick(_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i])\r\n                }, false)\r\n            }\r\n        },\r\n        // 按钮的行为函数\r\n        btnClick(data) {\r\n            //如果点击的是：切换大小写按钮--切换大小写\r\n            if (data.keyCode == 999) {\r\n                console.log('大小写切换');\r\n                // 改变islowercase的值;大小写字的切换\r\n                this.islowercase = !this.islowercase\r\n                //  //重新渲染初始化；键盘\r\n                this.renderKeys()\r\n                return false\r\n            }\r\n\r\n            //切换输入方式\r\n            if (data.keyCode == 998) {\r\n                // 是否是拼音输入\r\n                this.ispinyin = !this.ispinyin\r\n                // //重新渲染初始化；键盘\r\n                this.renderKeys()\r\n                return false\r\n            }\r\n\r\n            //关闭\r\n            if (data.keyCode == 997) {\r\n                // console.log('点击了关闭按钮');\r\n                // 不显示输入大盒子\r\n                this.hide()\r\n                return false\r\n            }\r\n\r\n            //如果字母输入\r\n            if (this.isZM(data.keyCode)) {\r\n                // 英文输入的情况下\r\n                if (!this.ispinyin) {\r\n                    this.setKeys(data.keyCode, !this.islowercase)\r\n                } else {\r\n                    //拼音输入\r\n                    document.body.pressKey && document.body.pressKey(data.keyCode);\r\n                }\r\n                return false\r\n            }\r\n            document.body.pressKey && document.body.pressKey(data.keyCode);\r\n        },\r\n        //关闭键盘\r\n        hide() {\r\n            // document.querySelector('#keyboardContent').blur()\r\n            this.$emit('update:isShowKeyboard', false)\r\n            // this.isShowKeyboard = false\r\n            this.simpleInputMethodHide()\r\n        },\r\n\r\n        //开启输入法\r\n        show() {\r\n            this.$emit('update:isShowKeyboard', true)\r\n            // this.isShowKeyboard = true\r\n            this.renderKeys()\r\n        },\r\n        // SimpleInputMethod\r\n        // 在这里：字母部分大小写，A和a的值，是一样的，主要就是用于区分输入的是否是：字母\r\n        // 用于判断：输入的是否是：【A-Z】;A：65-Z:90\r\n        isZM(keyCode) {//返回的是一个布尔值：t/f;判断输入的是都是一个数字\r\n            // keyCode：字符按键的编码值\r\n            return keyCode >= 65 && keyCode <= 90\r\n        },\r\n        // 拼音-》汉字输入盒子的隐藏\r\n        simpleInputMethodHide() {\r\n            // 重置拼音-》汉字盒子\r\n            this.reset();\r\n            // _target表示：属性指向拼音->汉字翻译盒子\r\n            this.simle_input_method.style.display = 'none';\r\n        },\r\n        // 重置:：拼音-》汉字的盒子\r\n        reset() {\r\n            this.hanzi = '';\r\n            this.pinyin = '';\r\n            this.chineseResult = [];\r\n            this.pageCurrent = 1;\r\n            this.pageCount = 0;\r\n            // 重新组合：预选汉族+预选拼音\r\n            this.pinyinTarget.innerHTML = '';\r\n        },\r\n        parseDict: function () {\r\n            // 如果导入了 pinyin_dict_firstletter.js---首字母输入模式\r\n            // if (window.pinyin_dict_firstletter) {\r\n            // \tdict.firstletter = pinyin_dict_firstletter;\r\n            // }\r\n            // 如果导入了 pinyin_dict_notone.js---支持多音字输入模式\r\n            if (_pinyin_dict_notone__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\r\n                /**\r\n                 * @param notone 汉字转拼音(多音字)的字典\r\n                 * @param py2hz 拼音转汉字的字典\r\n                 */\r\n                this.pinyinUtilDict.dict.notone = {};//汉字转拼音的字典\r\n                this.pinyinUtilDict.dict.py2hz = _pinyin_dict_notone__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; // 拼音转汉字的字典\r\n                for (let i in _pinyin_dict_notone__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\r\n                    let temp = _pinyin_dict_notone__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i];\r\n                    for (let j = 0, len = temp.length; j < len; j++) {\r\n                        // 汉字转拼音的字典为字典赋值\r\n                        if (!this.pinyinUtilDict.dict.notone[temp[j]]) this.pinyinUtilDict.dict.notone[temp[j]] = i; // 不考虑多音字\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        // ----------------------------------------------------------\r\n        /**\r\n         * 初始化\r\n         * selector:的用途是：文本域的dom对象;\r\n         * this.initDict();初始化字典配置\r\n         * this.initDom();拼音-》汉字盒子的初始化dom\r\n         */\r\n        /**\r\n         * 初始化字典配置\r\n         * 主要是：设置u，i，v的模糊音；但实际并没有用处\r\n         */\r\n        initDict() {\r\n            // 存储所有字典数据--汉字转拼音+拼音转汉字--字典\r\n            // 简单的浅拷贝\r\n            let dict = this.pinyinUtilDict.dict;\r\n            // 拼音转汉字\r\n            if (!dict.py2hz) throw '未找到合适的字典文件！';\r\n            // 这一步仅仅是给字母a-z扩充，例如根据b找不到相关汉字，就把bi的结果赋值给b\r\n            // 当然这种方式只是很简单的实现，真正的拼音输入法肯定不能这么简单处理\r\n            dict.py2hz2 = {};\r\n\r\n            // 输入i;会显示'i'\r\n            dict.py2hz2['i'] = 'i'; // i比较特殊，没有符合的汉字，所以特殊处理\r\n            // chenh新增的--并有效果\r\n            dict.py2hz2['u'] = 'u'; // u比较特殊，没有符合的汉字，所以特殊处理\r\n            dict.py2hz2['v'] = 'v'; // v比较特殊，没有符合的汉字，所以特殊处理\r\n\r\n            // 原来的写法，感觉有误：123对应的uni-code的字母为：'{'\r\n            // for (let i = 97; i <= 123; i++) {\r\n            // 处理小写字母：'a'->'z'\r\n            for (let i = 97; i <= 122; i++) {\r\n                // 它将整数转换为其对应的Unicode字符；97-->转为'a';122-->'z'\r\n                // \r\n                let ch = String.fromCharCode(i);\r\n                if (!dict.py2hz[ch]) {\r\n                    // 只有：u,i,v，字典没有汉字转字母的值\r\n                    for (let j in dict.py2hz) {\r\n                        // 没有；写的实际没用途\r\n                        if (j.indexOf(ch) == 0) {\r\n                            dict.py2hz2[ch] = dict.py2hz[j];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 初始化DOM结构的dom操作并设置事件监听\r\n         * 输入预选字的选择以及翻页操作\r\n         */\r\n        initDom() {\r\n            let temp = '<div class=\"pinyin\"></div><div class=\"chineseResult\"><ol></ol><div class=\"page-up-down\"><span class=\"page-up\">▲</span><span class=\"page-down\">▼</span></div></div>';\r\n            let dom = document.createElement('div');\r\n            dom.id = 'simle_input_method';\r\n            dom.className = 'simple-input-method';\r\n            dom.innerHTML = temp;\r\n            // console.log(this);\r\n            // this指向SimpleInputMethod\r\n            // 初始化汉字选择和翻页键的点击事件+的是事件委托\r\n            dom.addEventListener('click', (e) => {\r\n                let target = e.target;\r\n                // 输入预选字判读--》触发的对象是：li\r\n                if (target.nodeName == 'LI') {\r\n                    // console.log(target.dataset.idx);\r\n                    // target.dataset.idx：的值，是选择预选字的下标\r\n                    this.selectHanzi(parseInt(target.dataset.idx));\r\n                }\r\n                // 触发的对象是：span\r\n                else if (target.nodeName == 'SPAN') {\r\n                    // 点击的是上翻\r\n                    if (target.className == 'page-up' && this.pageCurrent > 1) {\r\n                        this.pageCurrent--;\r\n                        // \r\n                        this.refreshPage();\r\n                    }\r\n                    // 点击的是下翻\r\n                    else if (target.className == 'page-down' && this.pageCurrent < this.pageCount) {\r\n                        this.pageCurrent++;\r\n                        this.refreshPage();\r\n                    }\r\n                }\r\n            })\r\n            document.querySelector('#simle_input_methodBox').appendChild(dom);\r\n        },\r\n\r\n        // 文本域的键盘输入绑定\r\n        keyBoardInputInit(selector) {\r\n            // console.log(selector);\r\n\r\n            // 这里的this指向，函数的调用者，即最外层的对象\r\n            // 拼音预选字：u,v,i的处理\r\n            this.initDict();\r\n            // 生成预选字的DOM操作；绑定事件委托事件\r\n            this.initDom();\r\n            // obj为文本域的dom对象-node节点的伪数组;这里的textArea只有一个\r\n\r\n            // 输入盒子\r\n            this.simle_input_method = document.querySelector('#simle_input_method');\r\n            // 显示拼音的盒子\r\n            this.pinyinTarget = document.querySelector('#simle_input_method .pinyin');\r\n            // 显示拼音输入-预选字的盒子\r\n            this.chineseResultTarget = document.querySelector('#simle_input_method .chineseResult ol');\r\n\r\n            // 对文本域添加一个键盘按压的功能\r\n            selector.addEventListener('keydown', (e) => {\r\n                // console.log('键盘按压了;按的键是', e.keyCode);\r\n                // 获取每一次键盘输入的键的keCode的值\r\n                let keyCode = e.keyCode;\r\n                // 阻止默认事件\r\n                let preventDefault = false;\r\n                // 判断输入的是否是字母\r\n                if (this.isZM(keyCode)) {\r\n                    // this指向：obj[i]；文本域；\r\n                    // addChar()让待翻译拼音+keycode键盘输入的大写-》转换并显示小写;并让拼音显示为小写；实际输入的是：大写的keycode的值\r\n                    this.addChar(String.fromCharCode(keyCode + 32), e.target);\r\n                    preventDefault = true;\r\n                }\r\n                else if (keyCode == 8) // 如果按的是删除键的话\r\n                {\r\n                    // _targetd表示的输入的盒子；预选字盒子显示的话，就实现删除拼音预选字-1\r\n                    if (this.simle_input_method.style.display == 'block') {\r\n                        // 删除拼音的字符-1\r\n                        this.delChar();\r\n                    } else {\r\n                        // _targetd表示的输入的盒子影藏的话；就删除文本域输入框的内容-1\r\n                        this.inputDelChar();\r\n                    }\r\n                    // 阻止，键盘的输入默认行为\r\n                    preventDefault = true;\r\n                }\r\n                // 如果输入的是键盘的数据：0-9；\r\n                else if (keyCode >= 48 && keyCode <= 57) // 0-9\r\n                {\r\n                    // 如果拼音打盒子显示；则按钮点击会：选择预选字\r\n                    if (this.simle_input_method.style.display == 'block') {\r\n                        // 预选汉字只有：10个；所以需要减去48；做一下数据处理\r\n                        this.selectHanzi(keyCode - 48);\r\n                    } else {\r\n                        //  如果拼音打盒子关闭；则直接往文本域里面添加内容\r\n                        this.setKeys(keyCode)\r\n                    }\r\n\r\n                    preventDefault = true;\r\n                }\r\n                else if (keyCode == 32) // 空格\r\n                {\r\n                    if (this.simle_input_method.style.display == 'block') {\r\n                        // console.log(this.simle_input_method.style.display);\r\n                        this.selectHanzi(1);\r\n                    }\r\n                    // 空格作为字符作用-chen添加的\r\n                    else {\r\n                        this.selectCharacter(keyCode)\r\n                        preventDefault = true;\r\n                    }\r\n                }\r\n                else if (keyCode == 13) // 回车\r\n                {\r\n                    if (this.simle_input_method.style.display == 'block') {\r\n                        this.selectHanzi(0);\r\n                    }\r\n                    // 回车作为字符作用--chen添加的\r\n                    else {\r\n                        this.selectCharacter(keyCode)\r\n                        preventDefault = true;\r\n                    }\r\n\r\n                }\r\n                else if (keyCode == 33 && this.pageCount > 0 && this.pageCurrent > 1) // 上翻页\r\n                {\r\n                    this.pageCurrent--;\r\n                    this.refreshPage();\r\n                    preventDefault = true;\r\n                }\r\n                else if (keyCode == 34 && this.pageCount > 0 && this.pageCurrent < this.pageCount) // 下翻页\r\n                {\r\n                    this.pageCurrent++;\r\n                    this.refreshPage();\r\n                    preventDefault = true;\r\n                }\r\n                // 符号按钮的处理--chenh-新增\r\n                else if ((keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222)) {\r\n                    this.selectCharacter(keyCode)\r\n                    // 不触发默认事件；\r\n                    // 避免电脑键盘输入一个字符时；为文本添加2个字符\r\n                    preventDefault = true;\r\n\r\n                }\r\n                // tab键的处理--chenh-新增\r\n                else if (keyCode == 9) {\r\n                    this.selectCharacter(keyCode)\r\n                    // 不触发默认事件；\r\n                    // 避免电脑键盘输入一个字符时；为文本添加2个字符\r\n                    preventDefault = true;\r\n\r\n                }\r\n                if (preventDefault) e.preventDefault();\r\n            });\r\n\r\n        },\r\n        // 输入拼音预选字符的删除\r\n        delChar() {\r\n            if (this.pinyin.length <= 1) {\r\n                return this.simpleInputMethodHide();\r\n            }\r\n            // 拼音预选字符的删除\r\n            this.pinyin = this.pinyin.slice(0, this.pinyin.length - 1);\r\n            this.refresh();\r\n        },\r\n        // 输入拼音预选字符的增加\r\n        addChar(ch, obj) {\r\n            if (this.pinyin.length == 0) // 长度为1，显示输入法\r\n            {\r\n                this.simpleInputMethodshow(obj);\r\n            }\r\n            // 增加候选拼音--是一个字符串\r\n            this.pinyin += ch;\r\n            // 将拼音转换成汉字候选词，并显示在界面上\r\n            this.refresh();\r\n        },\r\n        // 拼音->汉字盒子的显示\r\n        simpleInputMethodshow(obj) {\r\n            let pos = obj.getBoundingClientRect();\r\n            // console.log(pos);\r\n            this.simle_input_method.style.left = pos.left + 'px';\r\n            this.simle_input_method.style.top = pos.top + pos.height + document.body.scrollTop + 'px';\r\n\r\n            this.simle_input_method.style.display = 'block';\r\n        },\r\n        /**\r\n         * \r\n         * 将拼音转换成汉字候选词，并显示在界面上\r\n         */\r\n        refresh() {\r\n            // 先把预选汉字中的：',替换为空\r\n            //  返回一个数组，格式类似：[[\"中\",\"重\",\"种\",\"众\",\"终\",\"钟\",\"忠\"], \"zhong'guo\"]\r\n            let temp = this.getHanzi(this.pinyin.replace(/'/g, ''));\r\n            // result：匹配到的汉字集合\r\n            this.chineseResult = temp[0];\r\n            // pinyin:拼音字符\r\n            this.pinyin = temp[1];\r\n            let count = this.chineseResult.length;\r\n            this.pageCurrent = 1;\r\n            this.pageCount = Math.ceil(count / this.pageSize);\r\n            // 重新组合：预选汉族+预选拼音\r\n            this.pinyinTarget.innerHTML = this.hanzi + this.pinyin;\r\n            // 刷新某“字母”，转换为：pageSize的预选数组的值\r\n            this.refreshPage();\r\n        },\r\n        /**\r\n         * 拼音转汉字\r\n         * @param pinyin 需要转换的拼音，如 zhongguo\r\n         * @return 返回一个数组，格式类似：[[\"中\",\"重\",\"种\",\"众\",\"终\",\"钟\",\"忠\"], \"zhong'guo\"]\r\n         */\r\n        getHanzi(pinyin) {\r\n            let chineseResult = this.getSingleHanzi(pinyin);\r\n            if (chineseResult) return [chineseResult.split(''), pinyin];\r\n            let temp = '';\r\n            for (let i = 0, len = pinyin.length; i < len; i++) {\r\n                temp += pinyin[i];\r\n                chineseResult = this.getSingleHanzi(temp);\r\n                if (!chineseResult) continue;\r\n                // flag表示如果当前能匹配到结果、并且往后5个字母不能匹配结果，因为最长可能是5个字母，如 zhuang\r\n                let flag = false;\r\n                if ((i + 1) < pinyin.length) {\r\n                    for (let j = 1, len = pinyin.length; j <= 5 && (i + j) < len; j++) {\r\n                        if (this.getSingleHanzi(pinyin.substr(0, i + j + 1))) {\r\n                            flag = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (!flag) return [chineseResult.split(''), pinyin.substr(0, i + 1) + \"'\" + pinyin.substr(i + 1)];\r\n            }\r\n            return [[], '']; // 理论上一般不会出现这种情况\r\n        },\r\n        // 刷新预选字的10-数组的赋值：这里默认是：5\r\n        refreshPage() {\r\n            // 对预选字-数组，数组的截取；截取每页的大小；result为总预选字\r\n            let temp = this.chineseResult.slice((this.pageCurrent - 1) * this.pageSize, this.pageCurrent * this.pageSize);\r\n            let html = '';\r\n            let i = 0;\r\n            // 生成预选字->1.啊\r\n            temp.forEach(function (val) {\r\n                html += '<li data-idx=\"' + (++i) + '\">' + i + '.' + val + '</li>';\r\n            });\r\n\r\n            // 用于控制“上下翻箭头的透明度\r\n            this.simle_input_method.querySelector('.page-up').style.opacity = this.pageCurrent > 1 ? '1' : '.3';\r\n            this.simle_input_method.querySelector('.page-down').style.opacity = this.pageCurrent < this.pageCount ? '1' : '.3';\r\n            // 给预选字的大盒子：ol添加预选字的内容\r\n            this.chineseResultTarget.innerHTML = html;\r\n        },\r\n        /**\r\n         * 单个拼音转单个汉字，例如输入 \"a\" 返回 \"阿啊呵腌嗄吖锕\"\r\n         */\r\n        getSingleHanzi(pinyin) {\r\n            return this.pinyinUtilDict.dict.py2hz2[pinyin] || this.pinyinUtilDict.dict.py2hz[pinyin] || '';\r\n        },\r\n        //英文下的直接输入\r\n        /**\r\n         * \r\n         * @param {*} keyCode \t键盘输入的值\r\n         * @param {*} islowercase \t默认是：false，默认的值是：keycode对应的value是大写\r\n         */\r\n        setKeys(keyCode, islowercase) {\r\n            // console.log('数字输入');\r\n            let value = ''\r\n            // 字母输入情况下：这里只有大写字母的输入\r\n            if (this.isZM(keyCode)) {\r\n                console.log(keyCode, islowercase);\r\n                // 小写情况\r\n                if (islowercase) {\r\n                    for (let i = 0; i < _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].length; i++) {\r\n                        if (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].keyCode == keyCode) {\r\n                            value = _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value || ''\r\n                        }\r\n                    }\r\n                } else {\r\n                    // 默认不是小写情况-》即大写\r\n                    for (let i = 0; i < _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].length; i++) {\r\n                        if (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].keyCode == keyCode) {\r\n                            // 把默认输入的大写字母，转为小写的，并输入：文本域的内容\r\n                            value = String.fromCharCode(_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value.charCodeAt(0) + 32) || ''\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // console.log('输入的不是字母');\r\n                // 非字母输入的情况\r\n                for (let i = 0; i < _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].length; i++) {\r\n                    if (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].keyCode == keyCode) {\r\n                        value = _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value || ''\r\n                    }\r\n                }\r\n            }\r\n            // this.myField为文本域的dom对象，往文本域里面添加值\r\n            this.insertAtCursor(value);  //光标处插入文本\r\n        },\r\n        // 文本的增\r\n        insertAtCursor(myValue) {\r\n            this.textValue += myValue\r\n        },\r\n        /**\r\n         * 选择某个汉字，i有效值为1-10\r\n         * @param i 输入对的场景：0-》回车；1-》空格；\r\n         */\r\n        selectHanzi(i) {\r\n            // 如果键盘输入的是：0,按的回车键\r\n            if (i == 0)//上全部的字母\r\n            {\r\n                // h'igkbjj--》higkbjj;并添加到文本域中\r\n                this.insertAtCursor(this.pinyin.replace(/'/g, ''));  //光标处插入文本\r\n                // 隐藏拼音-》输入-》预选显示盒子\r\n                this.simpleInputMethodHide();\r\n            }\r\n            //上正常汉字;输入的是1-10\r\n            let hz = this.chineseResult[(this.pageCurrent - 1) * this.pageSize + i - 1];\r\n            if (!hz) return;\r\n            // 候选汉字中，追加：一个候选字\r\n            this.hanzi += hz;\r\n            // 获取预选拼音字符：\"'\"的位置\r\n            let idx = this.pinyin.indexOf(\"'\");\r\n            if (idx > 0) {\r\n                // 拼音预选的：'，往后移一位\r\n                this.pinyin = this.pinyin.substr(idx + 1);\r\n                this.refresh();\r\n            }\r\n            // 如果没有单引号，表示已经没有候选词了\r\n            else {\r\n                //this._input.value += this.hanzi;\r\n                this.insertAtCursor(this.hanzi);  //光标处插入文本\r\n                this.simpleInputMethodHide();\r\n            }\r\n\r\n        },\r\n        /**\r\n         * 选自某个字符的输入--chenh-新增\r\n         * \r\n         */\r\n        selectCharacter(keycode) {\r\n            // console.log('字符输入');\r\n            let code = keycode\r\n            let value = ''\r\n            // 对tab键做的特殊处理\r\n            if (keycode == 9) {\r\n                value = '    '\r\n            } else if (keycode == 32) {\r\n                // 对空格做特殊处理\r\n                // console.log('空格');\r\n                value = '' + ' '\r\n            } else if (keycode == 13) {\r\n                // console.log('回车');\r\n                value = '' + '\\n'\r\n            } else {\r\n                for (let i = 0; i < _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].length; i++) {\r\n                    if (_keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].keyCode == code) {\r\n                        value = _keys_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].value || ''\r\n                    }\r\n                }\r\n            }\r\n            this.insertAtCursor(value);//光标处插入文本\r\n\r\n        },\r\n        /**\r\n         * 文本域内容的删除；功能有：单个删除，选中删除\r\n         */\r\n        inputDelChar() {\r\n            if (this.textValue.length > 0) {\r\n                this.textValue = this.textValue.slice(0, -1)\r\n            }\r\n        },\r\n        // 重写press\r\n        myPressKey() {\r\n            HTMLElement.prototype.pressKey = (e) => {\r\n                // kw：用于显示文本的标签\r\n                // obj为文本域的dom对象\r\n                // let obj = document.querySelector('#kw');\r\n                // 这段代码创建了一个名为\"ev\"的新事件对象，该事件类型为\"keydown\"，并设置了一些属性\r\n                // 事件类型：按钮按压；冒泡，表示事件不可取消，即无法通过调用preventDefault()方法来阻止事件的默认行为，表示事件可以穿越阴影DOM边界\r\n                let ev = new Event(\"keydown\", { \"bubbles\": true, \"cancelable\": false, \"composed\": true });\r\n                ev.keyCode = e;\r\n                // 给文本域添加事件按钮;代码调用dispatchEvent方法将创建的事件对象触发到文本域上，从而模拟按下指定的按键。\r\n                this.myField && this.myField.dispatchEvent(ev);\r\n            };\r\n        },\r\n        //获取文本输入的焦点\r\n        activeInputTarget() {\r\n            // 给文本输入域获取变量\r\n            // console.log(this.isShowKeyboard);\r\n            this.myField = document.querySelector('#bigKeys')\r\n            this.keyBoardInputInit(this.myField)\r\n        }\r\n    },\r\n    beforeMount() {\r\n        // 字典数据的处理\r\n        this.parseDict()\r\n\r\n    },\r\n    mounted() {\r\n        // 生成的虚拟Dom键盘\r\n        this.renderKeys();\r\n        // pressKey的方法重写\r\n        this.myPressKey()\r\n        this.activeInputTarget()\r\n    },\r\n    watch: {\r\n        // 文本value值的检测，发现文本值不一样，就输出文本的值\r\n        textValue: {\r\n            handler() {\r\n                this.$emit('getValue', this.textValue)\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib??vue-loader-options!./components/lib/ChenKeybord/index.vue?vue&type=style&index=0&id=8589fec4&lang=css&scoped=true ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n/* 定义全局变量 */\r\n\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!./node_modules/vue-loader/lib??vue-loader-options!./components/lib/ChenKeybord/index.vue?vue&type=template&id=8589fec4&scoped=true ***!
  \**********************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"show\",\n          rawName: \"v-show\",\n          value: _vm.isShowKeyboard,\n          expression: \"isShowKeyboard\",\n        },\n      ],\n      staticClass: \"keyboard\",\n      attrs: { id: \"bigKeys\" },\n    },\n    [_vm._m(0)]\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"keyboardContent\" }, [\n      _c(\"div\", { attrs: { id: \"simle_input_methodBox\" } }),\n      _vm._v(\" \"),\n      _c(\"div\", { attrs: { id: \"keys\" } }),\n    ])\n  },\n]\nrender._withStripped = true\n\n\n\n//# sourceURL=webpack://umi/./components/lib/ChenKeybord/index.vue?./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n//# sourceURL=webpack://umi/./node_modules/vue-loader/lib/runtime/componentNormalizer.js?");

/***/ })

/******/ });
});